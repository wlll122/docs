(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{736:function(e,t,s){"use strict";s.r(t);var n=s(106),a=Object(n.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h3",{attrs:{id:"定义目录基本结构"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#定义目录基本结构"}},[e._v("#")]),e._v(" 定义目录基本结构")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("egg-project\n├── package.json\n├── app.js (可选)\n├── agent.js (可选)\n├── app\n|   ├── router.js\n│   ├── controller // 编写控制器\n│   |   └── home.js \n│   ├── service (可选) //此处进行数据库操作等\n│   |   └── user.js\n│   ├── middleware (可选) // 自定义中间件或引入koa中间件\n│   |   └── response_time.js\n│   ├── schedule (可选) // 定时任务\n│   |   └── my_task.js\n│   ├── public (可选)\n│   |   └── reset.css\n│   ├── view (可选) // 静态模板文件\n│   |   └── home.tpl\n│   └── extend (可选)  // 扩展文件\n│       ├── helper.js (可选) //常用扩展,挂在于全局\n│       ├── request.js (可选)\n│       ├── response.js (可选)\n│       ├── context.js (可选)\n│       ├── application.js (可选)\n│       └── agent.js (可选)\n├── config // 全局配置文件\n|   ├── plugin.js\n|   ├── config.default.js\n│   ├── config.prod.js\n|   ├── config.test.js (可选)\n|   ├── config.local.js (可选)\n|   └── config.unittest.js (可选)\n└── test\n    ├── middleware\n    |   └── response_time.test.js\n    └── controller\n        └── home.test.js\n")])])]),s("h3",{attrs:{id:"路由传值"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#路由传值"}},[e._v("#")]),e._v(" 路由传值")]),e._v(" "),s("br"),e._v("\n通过路由可以获得前端传递的参数值,路由配置文件统一放在 app/router.js文件下.\n路由定义方式\n"),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("module.exports = app => {\n  const { router, controller } = app;\n  router.get('/home', controller.home); // 普通get传值\n  router.get('/user/:id', controller.user.page); // 动态路由传值 前端传值方式:https://www.baidu.com/123\n  router.post('/admin', isAdmin, controller.admin); // 有中间件的路由传值,isadmin为自定义路由鉴权中间件\n  router.post('/user', isLoginUser, hasAdminPermission, controller.user.create); //中间件级联操作\n  router.post('/api/v1/comments', controller.v1.comments.create); // app/controller/v1/comments.js\n};\n")])])]),s("p",[e._v("获取路由传值\n所有的路由控制代码均放在controller文件夹下\n获取GET传值")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("// 路由形式: https://xxx.xxxx.xxx/?user=xx  method:GET\nthis.ctx.query.user  //获取路由参数\n")])])]),s("p",[e._v("动态路由获取传值")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("//eggjs 路由形式 router.get('/user/:id', controller.user.page);\n//前端路由 https://xxx.xxxx.xxx/123\n//获取传值\nthis.ctx.query.id\n")])])]),s("p",[e._v("POST 获取传值")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("this.ctx.request.body\n//直接进行post会报错,需要暂时关闭csrf 模块,或自行添加请求cookie进行csrf验证\n")])])]),s("p",[e._v("关于csrf,点击链接\n"),s("a-tag",{attrs:{color:"pink"}},[s("a",{attrs:{href:"https://eggjs.org/zh-cn/core/security.html"}},[e._v("关于csrf")])])],1),e._v(" "),s("h3",{attrs:{id:"静态文件渲染"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#静态文件渲染"}},[e._v("#")]),e._v(" 静态文件渲染")]),e._v(" "),s("p",[e._v("引入ejs 模板渲染引擎")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v(" npm i egg-view-nunjucks --save\n")])])]),s("p",[e._v("配置ejs插件")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v("//config/plugins.js 启用插件\n ejs: {\n    enable: true,\n    package: 'egg-view-ejs',\n  },\n//config/config.default.js 配置插件\n// 定义模板引擎\n  config.view = {\n    mapping: {\n      '.html': 'ejs',\n    },\n  };\n\n")])])]),s("p",[e._v("定义视图")]),e._v(" "),s("div",{staticClass:"language- extra-class"},[s("pre",{pre:!0,attrs:{class:"language-text"}},[s("code",[e._v('app/view/index.html\n//此处按照常规html语法编写\n//渲染完成发送页面\nawait this.ctx.render(\'index\',list) // 可进行传值操作\n\x3c!-- index.html --\x3e 根据传递的list进行页面数据展示\n    <ul>\n        <%for(var i=0;i<list.length;i++){%>\n            <li>\n             <a href="/newscontent?aid=<%=list[i].aid%>""><%=list[i].title%></a>\n             <span>\n                <%=helper.formatTime( list[i].dateline)%>\n             </span>  \n            </li>\n            <%}%>\n    </ul>\n')])])]),s("p",[e._v("具体模板使用参照官方文档:  "),s("a-tag",{attrs:{color:"pink"}},[s("a",{attrs:{href:"https://eggjs.org/zh-cn/core/view.html"}},[e._v("关于模板引擎")])])],1)])}),[],!1,null,null,null);t.default=a.exports}}]);